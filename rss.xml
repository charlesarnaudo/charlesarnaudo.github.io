<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[My Blog]]></title><description><![CDATA[Whatever I want it to be]]></description><link>https://charlesarnaudo.github.io/</link><generator>RSS for Node</generator><lastBuildDate>Thu, 11 Apr 2019 21:39:22 GMT</lastBuildDate><item><title><![CDATA[Twelfth Post]]></title><description><![CDATA[This week I finallized the UI pages for counting and helped Adam implement a login page for the app. We are finalizing code reviews for the…]]></description><link>https://charlesarnaudo.github.io//12/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//12/</guid><pubDate>Tue, 09 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This week I finallized the UI pages for counting and helped Adam implement a login page for the app. We are finalizing code reviews for the count page too. I have spent some time working on our presentation. I have also code reviewed a lot of stuff too this week.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Eleventh Post]]></title><description><![CDATA[This week I have been working a webpage for counters to submit counts. It’s a simple layout - all timeslots are listed with their respective…]]></description><link>https://charlesarnaudo.github.io//11/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//11/</guid><pubDate>Wed, 03 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This week I have been working a webpage for counters to submit counts. It’s a simple layout - all timeslots are listed with their respective sessions under it. Users can click on a session, and input fields come up for submitting a count.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Tenth Post]]></title><description><![CDATA[I further modified the schema this week, removing the count table. I’ve reviewed backend code for phase two, as well changes to the phase…]]></description><link>https://charlesarnaudo.github.io//10/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//10/</guid><pubDate>Mon, 25 Mar 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I further modified the schema this week, removing the count table. I’ve reviewed backend code for phase two, as well changes to the phase one code. Later this week I’m going to help Nick work on the ui for the counting part of the app. I’d like to implement some good ways of submitting counts on both mobile and desktop. We hope to show some of our ideas thursday.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ninth Post]]></title><description><![CDATA[I spent a lot time this week preparing for a job interview - in fact I’m writing this post from an Amtrak train right now. I made a count…]]></description><link>https://charlesarnaudo.github.io//9/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//9/</guid><pubDate>Thu, 21 Mar 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I spent a lot time this week preparing for a job interview - in fact I’m writing this post from an Amtrak train right now. I made a count and user table, where a counts primary key is a &lt;code class=&quot;language-text&quot;&gt;countID&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;sessionID&lt;/code&gt;. We also store the &lt;code class=&quot;language-text&quot;&gt;userID&lt;/code&gt; of who made the count in the count table. This will let us keep track of which users make which counts. &lt;/p&gt;
&lt;p&gt;I spent some other time this week refining some timeslot and speakers ui code. The edit functionality was broken so I helped debug that.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Eighth Post]]></title><description><![CDATA[I finished the all of UI facade last week. This week I reviewed code and worked on a new table for the db to store counts.  The new table…]]></description><link>https://charlesarnaudo.github.io//8/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//8/</guid><pubDate>Thu, 14 Mar 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I finished the all of UI facade last week. This week I reviewed code and worked on a new table for the db to store counts. &lt;/p&gt;
&lt;p&gt;The new table will use the SessionID as a primary key, and have rows for beginning, middle, end.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Seventh Post]]></title><description><![CDATA[This past week I tried to move onto the UI team. I was expecting to help them integrate with the backend api points, as I’m familia with…]]></description><link>https://charlesarnaudo.github.io//7/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//7/</guid><pubDate>Tue, 26 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This past week I tried to move onto the UI team. I was expecting to help them integrate with the backend api points, as I’m familia with themr. Instead we had to choose a framework and get started on an initial UI as no code had been written. Angular was chosen, and I started the initial UI components and stubbed out the facade for the ui to use to make calls to the backend. I cut some tickets for the UI team to use for implementing the UI. It’s looking like we’ll need some help so I think some members of the backend team will be moving over to help out.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Sixth Post]]></title><description><![CDATA[This week backend stubs were merged and tickets were cut for endpoints. We used GitHub issues to create the tickets and Projects to track…]]></description><link>https://charlesarnaudo.github.io//6/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//6/</guid><pubDate>Wed, 20 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This week backend stubs were merged and tickets were cut for endpoints. We used GitHub issues to create the tickets and Projects to track work. We have some test data in the DB now, and the backend and the db are communicating, allowing us to run tests. I picked up a ticket to write, delete and update a room. I’m running into some issues with unmarshalling the json from the request body but Andrew is going to look at it with me later this week. Our team is iterating quickly and we’ve gotten a bunch of technical features done. We have integration tests now, api docs and logging!&lt;/p&gt;
&lt;p&gt;After this ticket I’m going to move onto the UI team for a bit to help them get started and give them some direction.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Fifth Post]]></title><description><![CDATA[This week we started stubbing out the backend code. It’s looking alright.   makes it hard to implement some concepts of SOLID, as   has it’s…]]></description><link>https://charlesarnaudo.github.io//5/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//5/</guid><pubDate>Wed, 13 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This week we started stubbing out the backend code. It’s looking alright. &lt;code class=&quot;language-text&quot;&gt;Go&lt;/code&gt; makes it hard to implement some concepts of SOLID, as &lt;code class=&quot;language-text&quot;&gt;Go&lt;/code&gt; has it’s own opinionated way of how to write code BUT I think we did a good job of following SOLID principles. We got our db schema for phase 1 merged, and I’m working on creating some test fixtures to test our backend code on. Later this week we’ll work on getting those tests to run on pull requests, that way we know if new code passes or fails our tests. &lt;/p&gt;
&lt;p&gt;I think after I’m done with this I’ll be hopping onto the UI team to help them get rolling on their code. I don’t believe they’ve started coding or picked a framework for the UI. They’re also unfamiliar with how &lt;code class=&quot;language-text&quot;&gt;Docker&lt;/code&gt; works, so they’ll need help running their code locally.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Fourth Post]]></title><description><![CDATA[ 
 This week our group split into two teams, Frontend and Backend (which also includes DB). I started working on our development environment…]]></description><link>https://charlesarnaudo.github.io//4/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//4/</guid><pubDate>Thu, 07 Feb 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;
This week our group split into two teams, Frontend and Backend (which also includes DB). I started working on our development environment. We are using docker
to test the app locally. We will be running three containers - front end, backend, and db. The backend will act as an interface between the front end and db. I also started working
on a db schema based on the ERD our group created. One of the other people in our group is setting up the framework of the backend code. Our work will let the team start coding soon and
iterating on the app quickly. &lt;/p&gt;
&lt;p&gt; I’m afraid the Professor knows too much about the solution he’d like created for this problem, from a technical standpoint, which might force us into decisions we don’t want to make.
However, I understand it’s tough playing both the client and tech lead. I think some freedom in decision making is needed though, without worry about what the tech lead (professor) might think. If we’re gonna make a terrible decision, yeah, please steer us away. But if it’s something mildy inconvienent or quirky, like not having a &lt;code class=&quot;language-text&quot;&gt;timeSlot&lt;/code&gt; table in the db, I think it’s good that you are letting us make it, even if it fails later. Part of agile is allowing us to fail fastly and iterate quickly, so we can always fix it. &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Third Post]]></title><description><![CDATA[This was a good week. Our group, team red, met yesterday ahead of our meeting in class this Thursday
to talk more about our requirements and…]]></description><link>https://charlesarnaudo.github.io//3/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//3/</guid><pubDate>Tue, 29 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This was a good week. Our group, team red, met yesterday ahead of our meeting in class this Thursday
to talk more about our requirements and features.&lt;/p&gt;
&lt;p&gt;I think we have a good feel for what we want to build, and some of the things (features) we will need to build to do it. I think our group also has a good mix of people who are interested in doing different things - UI, backend, database, etc. We all agreed that less is more when it comes to this app, and that we should strive to make it as simple as possible. We came up with some questions to ask the client, which will help influence the features.&lt;/p&gt;
&lt;p&gt;Our app is shaping up to be a webapp with database. The front end might have unique features to make it easier to use from a mobile device. The database will organize the information about the sessions in a way that makes it easy for us to update and retrieve counts. There will be a layer in between the front end and back end that facilitates communication.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Second Post]]></title><description><![CDATA[Another week, more NPM mishaps. Javascript is the worst and I hate it. Making this websites has got me thinking more about the requirements…]]></description><link>https://charlesarnaudo.github.io//2/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//2/</guid><pubDate>Fri, 25 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Another week, more NPM mishaps. Javascript is the worst and I hate it. Making this websites has got me thinking more about the requirements
for our project, specifically the UI. I’ve also been reading a lot of &lt;code class=&quot;language-text&quot;&gt;Why Software Sucks&lt;/code&gt;, in which the beginning chapters are about UI. With
this in mind, I think the UI for our application should be served by a webpage. It should be simple, like really &lt;strong&gt;simple&lt;/strong&gt;. No dumb stuff, or
frameworks. Just some input fields and maybe display current counts. I want it to be dumb.&lt;/p&gt;
&lt;p&gt;I worry a bit about people on the team getting carried away and going to fast with the project. The longer we wait to code the better and simpler
our app will be. IMO if this app is anything over ~1500 lines of code we messed up.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[First Post]]></title><description><![CDATA[My goals for this week were to iron out the kinks in my deploy process for this blog and connect with my team to start discussion on…]]></description><link>https://charlesarnaudo.github.io//1/</link><guid isPermaLink="false">https://charlesarnaudo.github.io//1/</guid><pubDate>Fri, 18 Jan 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;My goals for this week were to iron out the kinks in my deploy process for this blog and connect with my team to start discussion on requirements for our project.&lt;/p&gt;
&lt;p&gt;I use a tool called Gatsby to build this site. It’s dependices are managed through &lt;code class=&quot;language-text&quot;&gt;npm&lt;/code&gt;, which is almost definitely the worst package manager in the world. Somehow
Gatsby itself got removed from the dependcy list so my deploys weren’t working all week. I had to dig through git commits to find it had been removed. I’ve decided to
learn more about &lt;code class=&quot;language-text&quot;&gt;npm&lt;/code&gt; that way this doesn’t happen again. I did not anticipate having these issues with the blog but I was able to resolve them.&lt;/p&gt;
&lt;p&gt;Our teams were just finalized yesterday, so I’ve reached out to a few people in the group to talk about requirements.&lt;/p&gt;</content:encoded></item></channel></rss>